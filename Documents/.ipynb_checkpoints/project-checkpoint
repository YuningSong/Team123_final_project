{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Assignment 2\n",
    "## NBA Player's statistics\n",
    "#### Chiung-Chih, Lin, NUID:001400251"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Abstract "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The assignment 2 continues with the assignment 1, the topic is still NBA player‚Äôs personal information and statistics of 2014-2015 regular season which are scraped from the Internet, and also adds the Instagram data at this time. For part 1, the basic conceptual models along with the ER diagrams were done and the relationships of each entity were represented on ER diagrams. For part2, the conceptual models and ER diagrams were organized according to the database normalization. In addition, the sql database for NBA players was built, and also provided 5 user cases that show the sql database can be queried."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import the packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import requests\n",
    "import numpy as np\n",
    "from requests import get\n",
    "from bs4 import BeautifulSoup as bs\n",
    "from instaloader import Instaloader, Profile\n",
    "from datetime import datetime, timedelta\n",
    "from itertools import dropwhile, takewhile\n",
    "from itertools import islice\n",
    "import sqlite3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PART 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Scraping Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Web Scraper\n",
    "url = \"http://www.espn.com/nba/statistics/player/_/stat/rebounds/sort/avgRebounds/year/2015/count/\"+\"1\"\n",
    "response = get(url)\n",
    "html_soup = bs(response.text,'html.parser')## python's in built library HTML parser\n",
    "id_check = html_soup.find(id =\"my-players-table\")\n",
    "\n",
    "# find and store the max. page number\n",
    "players_container2 = id_check.find_all(class_ =\"page-numbers\")\n",
    "container2=players_container2[0].text\n",
    "x = container2.split(\" \", 2) # split page \"1 of 7\" in to \"1\", \"of\", \"7\"\n",
    "pages=int(x[2]) # get max page no.\"7\"\n",
    "\n",
    "nba1=pd.DataFrame() # store the data value in dataframe\n",
    "\n",
    "for y in range(pages): # from page 1 to 7\n",
    "    url = \"http://www.espn.com/nba/statistics/player/_/stat/rebounds/sort/avgRebounds/year/2015/count/\" + str(y*40+1)\n",
    "    response = get(url)\n",
    "    html_soup = bs(response.text, 'html.parser')  ## python's in built library HTML parser\n",
    "    id_check = html_soup.find(id=\"my-players-table\")\n",
    "    players_container = id_check.find_all(\"tr\")\n",
    "\n",
    "    headers1_cols = [] # store the headers for column\n",
    "    h_count=0 # for counting how many header repeat in each page\n",
    "    d_count=1 # for counting the rank of players\n",
    "\n",
    "    # extract data from individual players container\n",
    "    for container in players_container:\n",
    "        content = container.find_all(\"td\")\n",
    "        if content[0].text==\"RK\":\n",
    "            headers1_cols=[content[0].text, content[1].text, content[2].text,\n",
    "                          content[3].text, content[4].text, content[5].text,\n",
    "                          content[6].text, content[7].text, content[8].text,\n",
    "                          content[9].text, content[10].text, content[11].text]\n",
    "            h_count=h_count+1\n",
    "        else:\n",
    "            content_s=content[1].text.split(\",\",1)  #split player's name and position\n",
    "            tt = pd.DataFrame(np.column_stack([(y*40-h_count+d_count), content_s[0],content_s[1], content[2].text,\n",
    "                                                content[3].text, content[4].text, content[5].text,\n",
    "                                                content[6].text, content[7].text, content[8].text,\n",
    "                                                content[9].text, content[10].text, content[11].text]))\n",
    "            nba1=nba1.append(tt)\n",
    "        d_count=d_count+1\n",
    "\n",
    "headers1_cols.insert(2,\"POSITION\") # add column \"POSITION\" in existing column list\n",
    "nba1.columns = headers1_cols # change the columns name to headers\n",
    "nba1.index = range(0,len(nba1)) # reorder the index\n",
    "\n",
    "\n",
    "## WebAPI\n",
    "# fake a browser visit\n",
    "user_agent = 'User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Maxthon 2.0)'\n",
    "headers = {'User-Agent':user_agent}\n",
    "url='https://stats.nba.com/stats/leagueLeaders?LeagueID=00&PerMode=PerGame&Scope=S&Season=2014-15&SeasonType=Regular+Season&StatCategory=PTS'\n",
    "r=requests.get(url,headers=headers).json() #grab the statistics data\n",
    "\n",
    "num=int(len(r['resultSet']['rowSet'])) # numbers of total data\n",
    "\n",
    "headers2_cols=[] # store the headers for column\n",
    "nba2=pd.DataFrame() # store the data value in dataframe\n",
    "\n",
    "# store the headers for column\n",
    "for x in r['resultSet']['headers']:\n",
    "    headers2_cols.append(x)\n",
    "\n",
    "# extract data from json\n",
    "for z in range(num):\n",
    "    player = pd.DataFrame([r['resultSet']['rowSet'][z]])\n",
    "    nba2=nba2.append((player))\n",
    "\n",
    "nba2.columns=headers2_cols # change the columns name to headers\n",
    "nba2.index = range(0,num) # reorder the index\n",
    "\n",
    "## Import csv file\n",
    "nba3 = pd.read_csv(\"players_stats.csv\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Audit Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#list to store scraped value data in:\n",
    "combine1=pd.DataFrame()\n",
    "combine2=pd.DataFrame()\n",
    "player_stat_all=pd.DataFrame()\n",
    "player_stat=pd.DataFrame()\n",
    "\n",
    "# combine 3 dataframes by \"Player's Name\"\n",
    "combine1=nba1.merge(nba2,left_on = 'PLAYER',right_on = 'PLAYER',how = 'inner')\n",
    "combine2=nba3.merge(combine1,left_on = 'Name',right_on = 'PLAYER',how = 'inner')\n",
    "combine2\n",
    "# pick the columns that needs to present and store them to new dataframe\n",
    "player_stat_all = combine2[['Name','Age','Birth_Place','Birthdate','Height','Weight','TEAM_y','POSITION','PTS_y','RPG']]\n",
    "\n",
    "# drop the rows that the values are missing\n",
    "player_stat = player_stat_all.dropna()\n",
    "\n",
    "# rename the columns' name\n",
    "player_stat.columns = ['Name', 'Age','Birth_Place','Birthdate','Height','Weight','Team','Position','PTS','RPG']\n",
    "\n",
    "# change column \"Age\" type to int\n",
    "player_stat = player_stat.astype({'Age':'int'})\n",
    "\n",
    "# reorder the index\n",
    "player_stat.index = range(0,len(player_stat))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Instagram "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Player_id</th>\n",
       "      <th>Name</th>\n",
       "      <th>ig_fullname</th>\n",
       "      <th>ig_username</th>\n",
       "      <th>ig_id</th>\n",
       "      <th>ig_bio</th>\n",
       "      <th>ig_url</th>\n",
       "      <th>ig_posts</th>\n",
       "      <th>ig_followers</th>\n",
       "      <th>ig_following</th>\n",
       "      <th>ig_latestpost_time</th>\n",
       "      <th>ig_latestpost_caption</th>\n",
       "      <th>ig_latestpost_likes</th>\n",
       "      <th>ig_latestpost_comments</th>\n",
       "      <th>ig_postwithin24hours</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>Al Horford</td>\n",
       "      <td>Al Horford</td>\n",
       "      <td>alhorford</td>\n",
       "      <td>10733526</td>\n",
       "      <td></td>\n",
       "      <td>https://www.youtube.com/watch?v=YiZUWssMzyg&amp;fe...</td>\n",
       "      <td>321</td>\n",
       "      <td>505252</td>\n",
       "      <td>265</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Alan Anderson</td>\n",
       "      <td>Alan Anderson</td>\n",
       "      <td>dubblea74</td>\n",
       "      <td>1923491235</td>\n",
       "      <td>Proud Father‚úäüèæ\\nüë®üèæ‚ÄçüéìMichigan State Alumni\\n Hu...</td>\n",
       "      <td>https://thecombinelasvegas.com/</td>\n",
       "      <td>83</td>\n",
       "      <td>5306</td>\n",
       "      <td>41</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>Alex Len</td>\n",
       "      <td>Alex Len</td>\n",
       "      <td>alexlen_21</td>\n",
       "      <td>300139600</td>\n",
       "      <td>Ukraine ‚úàÔ∏èMaryland ‚úàÔ∏èPhoenix ‚úàÔ∏èAtlanta   \"A mo...</td>\n",
       "      <td>None</td>\n",
       "      <td>140</td>\n",
       "      <td>40409</td>\n",
       "      <td>983</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Player_id           Name    ig_fullname ig_username       ig_id  \\\n",
       "0         2     Al Horford     Al Horford   alhorford    10733526   \n",
       "1         4  Alan Anderson  Alan Anderson   dubblea74  1923491235   \n",
       "2         5       Alex Len       Alex Len  alexlen_21   300139600   \n",
       "\n",
       "                                              ig_bio  \\\n",
       "0                                                      \n",
       "1  Proud Father‚úäüèæ\\nüë®üèæ‚ÄçüéìMichigan State Alumni\\n Hu...   \n",
       "2  Ukraine ‚úàÔ∏èMaryland ‚úàÔ∏èPhoenix ‚úàÔ∏èAtlanta   \"A mo...   \n",
       "\n",
       "                                              ig_url ig_posts ig_followers  \\\n",
       "0  https://www.youtube.com/watch?v=YiZUWssMzyg&fe...      321       505252   \n",
       "1                    https://thecombinelasvegas.com/       83         5306   \n",
       "2                                               None      140        40409   \n",
       "\n",
       "  ig_following   ig_latestpost_time ig_latestpost_caption  \\\n",
       "0          265  No post in 24 hours   No post in 24 hours   \n",
       "1           41  No post in 24 hours   No post in 24 hours   \n",
       "2          983  No post in 24 hours   No post in 24 hours   \n",
       "\n",
       "   ig_latestpost_likes ig_latestpost_comments ig_postwithin24hours  \n",
       "0  No post in 24 hours    No post in 24 hours                    0  \n",
       "1  No post in 24 hours    No post in 24 hours                    0  \n",
       "2  No post in 24 hours    No post in 24 hours                    0  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def post(name):\n",
    "\n",
    "    L = Instaloader()\n",
    "    posts =Profile.from_username(L.context, name).get_posts()\n",
    "    temp=pd.DataFrame()\n",
    "    SINCE = datetime.now()\n",
    "    UNTIL = datetime.now()- timedelta(days = 1)\n",
    "    x=0\n",
    "    for post in takewhile(lambda p: p.date > UNTIL, dropwhile(lambda p: p.date > SINCE, posts)):\n",
    "        tt = [post.date,post.caption,post.likes,post.comments]\n",
    "        temp=temp.append(tt)\n",
    "        x=x+1\n",
    "    else:\n",
    "        #tt=[np.NaN,np.NaN,np.NaN,np.NaN]\n",
    "        tt=['No post in 24 hours','No post in 24 hours','No post in 24 hours','No post in 24 hours']\n",
    "        temp=temp.append(tt)\n",
    "    return temp[0:4].transpose(),x\n",
    "\n",
    "# read players' ig username\n",
    "ig_n = pd.read_csv(\"player_ig2.csv\")\n",
    "L = Instaloader()\n",
    "\n",
    "ig_df=pd.DataFrame()\n",
    "iig_df=pd.DataFrame()\n",
    "\n",
    "for x in range(len(ig_n)):\n",
    "    profile = Profile.from_username(L.context, ig_n.iat[x,2])\n",
    "    \n",
    "    tt = pd.DataFrame(np.column_stack([ig_n.iat[x,0],ig_n.iat[x,1],\n",
    "                                       profile.full_name,profile.username, profile.userid,\n",
    "                                       profile.biography,profile.external_url,profile.mediacount,\n",
    "                                       profile.followers,profile.followees]))\n",
    "    ig_df=ig_df.append(tt)\n",
    "    zz=pd.DataFrame(np.column_stack([post(ig_n.iat[x,2])[0],post(ig_n.iat[x,2])[1]]))\n",
    "    iig_df=iig_df.append(zz)    \n",
    "\n",
    "ig_result = pd.concat([ig_df, iig_df], axis=1, ignore_index=True)\n",
    "ig_result.columns = ['Player_id','Name','ig_fullname','ig_username','ig_id','ig_bio','ig_url','ig_posts','ig_followers','ig_following',\n",
    "                 'ig_latestpost_time','ig_latestpost_caption','ig_latestpost_likes',\n",
    "                 'ig_latestpost_comments', 'ig_postwithin24hours']\n",
    "ig_result.index = range(0,len(ig_result))\n",
    "ig_result.head(3)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teams_Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team_abbreviations</th>\n",
       "      <th>Team_fullname</th>\n",
       "      <th>Arena</th>\n",
       "      <th>Location</th>\n",
       "      <th>Capacity</th>\n",
       "      <th>Opened</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MIA</td>\n",
       "      <td>Miami Heat</td>\n",
       "      <td>American Airlines Arena</td>\n",
       "      <td>Miami, Florida</td>\n",
       "      <td>19,600</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>DAL</td>\n",
       "      <td>Dallas Mavericks</td>\n",
       "      <td>American Airlines Center</td>\n",
       "      <td>Dallas, Texas</td>\n",
       "      <td>19,200</td>\n",
       "      <td>2001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ORL</td>\n",
       "      <td>Orlando Magic</td>\n",
       "      <td>Amway Center</td>\n",
       "      <td>Orlando, Florida</td>\n",
       "      <td>18,846</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Team_abbreviations     Team_fullname                     Arena  \\\n",
       "0                MIA        Miami Heat   American Airlines Arena   \n",
       "1                DAL  Dallas Mavericks  American Airlines Center   \n",
       "2                ORL     Orlando Magic              Amway Center   \n",
       "\n",
       "           Location Capacity  Opened  \n",
       "0    Miami, Florida   19,600    1999  \n",
       "1     Dallas, Texas   19,200    2001  \n",
       "2  Orlando, Florida   18,846    2010  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "team_profile = pd.read_csv(\"team_profile.csv\")\n",
    "team_profile.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Combine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "res=player_stat.merge(team_profile,left_on = 'Team',right_on = 'Team_abbreviations',how = 'left')\n",
    "res = res[['Name','Age','Birth_Place','Birthdate','Height','Weight','Position','PTS','RPG','Team',\n",
    "          'Team_fullname','Arena','Location','Capacity','Opened']]\n",
    "\n",
    "res_ig=res.merge(ig_result,left_on = 'Name',right_on = 'Name',how = 'left')\n",
    "res_ig = res_ig.dropna(subset=['ig_fullname'])\n",
    "\n",
    "# output the dataframe\n",
    "res_ig.to_csv('nba_player_2014-2015_stats_ig.csv',index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Age</th>\n",
       "      <th>Birth_Place</th>\n",
       "      <th>Birthdate</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Position</th>\n",
       "      <th>PTS</th>\n",
       "      <th>RPG</th>\n",
       "      <th>Team</th>\n",
       "      <th>...</th>\n",
       "      <th>ig_bio</th>\n",
       "      <th>ig_url</th>\n",
       "      <th>ig_posts</th>\n",
       "      <th>ig_followers</th>\n",
       "      <th>ig_following</th>\n",
       "      <th>ig_latestpost_time</th>\n",
       "      <th>ig_latestpost_caption</th>\n",
       "      <th>ig_latestpost_likes</th>\n",
       "      <th>ig_latestpost_comments</th>\n",
       "      <th>ig_postwithin24hours</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Al Horford</td>\n",
       "      <td>29</td>\n",
       "      <td>do</td>\n",
       "      <td>June 3, 1986</td>\n",
       "      <td>205.0</td>\n",
       "      <td>110.25</td>\n",
       "      <td>C</td>\n",
       "      <td>15.2</td>\n",
       "      <td>7.2</td>\n",
       "      <td>ATL</td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td>https://www.youtube.com/watch?v=YiZUWssMzyg&amp;fe...</td>\n",
       "      <td>321</td>\n",
       "      <td>505252</td>\n",
       "      <td>265</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alan Anderson</td>\n",
       "      <td>33</td>\n",
       "      <td>us</td>\n",
       "      <td>October 16, 1982</td>\n",
       "      <td>195.0</td>\n",
       "      <td>99.00</td>\n",
       "      <td>SG</td>\n",
       "      <td>7.4</td>\n",
       "      <td>2.8</td>\n",
       "      <td>BKN</td>\n",
       "      <td>...</td>\n",
       "      <td>Proud Father‚úäüèæ\\nüë®üèæ‚ÄçüéìMichigan State Alumni\\n Hu...</td>\n",
       "      <td>https://thecombinelasvegas.com/</td>\n",
       "      <td>83</td>\n",
       "      <td>5306</td>\n",
       "      <td>41</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alex Len</td>\n",
       "      <td>22</td>\n",
       "      <td>ua</td>\n",
       "      <td>June 16, 1993</td>\n",
       "      <td>212.5</td>\n",
       "      <td>117.00</td>\n",
       "      <td>C</td>\n",
       "      <td>6.3</td>\n",
       "      <td>6.6</td>\n",
       "      <td>PHX</td>\n",
       "      <td>...</td>\n",
       "      <td>Ukraine ‚úàÔ∏èMaryland ‚úàÔ∏èPhoenix ‚úàÔ∏èAtlanta   \"A mo...</td>\n",
       "      <td>None</td>\n",
       "      <td>140</td>\n",
       "      <td>40409</td>\n",
       "      <td>983</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>No post in 24 hours</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows √ó 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Name  Age Birth_Place         Birthdate  Height  Weight Position  \\\n",
       "1     Al Horford   29          do      June 3, 1986   205.0  110.25        C   \n",
       "3  Alan Anderson   33          us  October 16, 1982   195.0   99.00       SG   \n",
       "4       Alex Len   22          ua     June 16, 1993   212.5  117.00        C   \n",
       "\n",
       "    PTS  RPG Team         ...           \\\n",
       "1  15.2  7.2  ATL         ...            \n",
       "3   7.4  2.8  BKN         ...            \n",
       "4   6.3  6.6  PHX         ...            \n",
       "\n",
       "                                              ig_bio  \\\n",
       "1                                                      \n",
       "3  Proud Father‚úäüèæ\\nüë®üèæ‚ÄçüéìMichigan State Alumni\\n Hu...   \n",
       "4  Ukraine ‚úàÔ∏èMaryland ‚úàÔ∏èPhoenix ‚úàÔ∏èAtlanta   \"A mo...   \n",
       "\n",
       "                                              ig_url ig_posts ig_followers  \\\n",
       "1  https://www.youtube.com/watch?v=YiZUWssMzyg&fe...      321       505252   \n",
       "3                    https://thecombinelasvegas.com/       83         5306   \n",
       "4                                               None      140        40409   \n",
       "\n",
       "   ig_following   ig_latestpost_time ig_latestpost_caption  \\\n",
       "1           265  No post in 24 hours   No post in 24 hours   \n",
       "3            41  No post in 24 hours   No post in 24 hours   \n",
       "4           983  No post in 24 hours   No post in 24 hours   \n",
       "\n",
       "   ig_latestpost_likes ig_latestpost_comments ig_postwithin24hours  \n",
       "1  No post in 24 hours    No post in 24 hours                    0  \n",
       "3  No post in 24 hours    No post in 24 hours                    0  \n",
       "4  No post in 24 hours    No post in 24 hours                    0  \n",
       "\n",
       "[3 rows x 29 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res_ig.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ER diagrams of entire conceptual model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The entity \"play_stat\" using the attribute \"Name\" to connect with entity \"ig_result\". Also, the entity \"play_stat\" using the attribute \"Team\" to connect with entity \"team_profile\" by attritube \"Team_abbreviations\"."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"./1.png\" width=\"750\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. What are the ranges, data type and format of all the attributes in your entities?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"./3.png\"  width=\"500\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. When should you use an entity versus attribute? (Example: address of a person could be modeled as either)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It depend on the system, the entities are the things or objects in a system that represent conceptual categories, not specific object. The attributes are the some details that associated with each entity.\n",
    "Therefore, if the system, for example is about the people who live on this ‚Äúaddress‚Äù then the ‚Äúaddress‚Äù can be the entity. On the other side, if the system is about the people‚Äôs profile then the ‚Äúaddress‚Äù can be the attribute because of it is one detail of this person."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. When should you use an entity or relationship, and placement of attributes? (Example: a manager could be modeled as either)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The entities represent the conceptual categories of objects of a system, and the relationship depict the act of enrolling and connecting the two entities. \n",
    "Therefore, if the system is about the position of a company then the ‚Äúmanager‚Äù can be an entity, but if the system is about the relationship of two employees then the ‚Äúmanager‚Äù can be the relationship between them."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4. How did you choose your keys? Which are unique?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For the ‚Äúplayer_stat‚Äù and ‚Äúig_result‚Äù, as the attribute ‚ÄúName‚Äù is the unique value for all players, so I chose the attribute ‚ÄúName‚Äù as the key of both of the entities to connect together.\n",
    "For the ‚ÄúPlay_stat ‚Äù and ‚Äúteam_profile‚Äù, as one player only belongs in one team so the ‚ÄúTeam‚Äù can be the key to connect with each unique ‚ÄúTeam_abbriviations‚Äù in the entity of ‚Äúteam_profile‚Äù.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5. Did you model hierarchies using the ‚ÄúISA‚Äù design element? Why or why not?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Yes, I did use the \"ISA\" design element. The dataframe \"ig_result\" and \"teams_profile\" belongs to the \"play_stat\", which means I can obtain the details of a player personal information even their team information and instagram status according to the hierarchies of these dataframes. By using this hierarchies system, the whole information can be broken down into serval dataframes, and it not only an easy way for user to query the information they wanted but also more convenient to maintain or update the data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 6. Were there design alternatives? What are their tradeoffs: entity vs. attribute, entity vs. relationship, binary vs. ternary relationships"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Yes, some attritubes can build their own entity, the personal information such as name, age, birthday, birth place, height, weight and position can be another entity, the advantage is it would be more easy to maintain the player's data but the disadvantage is that some of the players might not play for next season so every years we need to insert or delete from the entity. However, if the player's information combined with the statistics, it would be more convenient to see who play in this years."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 7. Where are you going to find real-world data to populate your model?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this conceptual model, the data of NBA player's statistics of 2014-2015 regular season are from the official website and espn.com. Because of this conceptual model is built on real-world data, so I can download the new data from those website again, such as statistics of 2015-2016 or statistics of 2017-2018, and perfectly fit into this conceptual model."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PART 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The conceptual/dataframes are organized according to the database normalization, so the original three dataframes are decomposed into few tables in order to eliminate reduntant data and ensure data dependencies to make sense. The updated ER diagrams are shown as below picture.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"./2.png\" >"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Normalization-- Table \"PROFILE\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Table 'player_profile'\n",
    "player_profile=player_stat[['Name', 'Age','Birth_Place','Birthdate','Height','Weight','Position']]\n",
    "player_profile.insert(0, 'Player_id', range(1,len(player_profile)+1))\n",
    "player_profile.columns =['Player_id','Name', 'Age','Birth_place','Birthdate','Height','Weight','Position'] \n",
    "player_profile.head(3)\n",
    "player_profile.to_csv('player_profile.csv',index=False)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Normalization-- Table \"TEAMS\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team_id</th>\n",
       "      <th>Abbreviation</th>\n",
       "      <th>Fullname</th>\n",
       "      <th>Arena</th>\n",
       "      <th>Location</th>\n",
       "      <th>Capacity</th>\n",
       "      <th>Opened</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>MIA</td>\n",
       "      <td>Miami Heat</td>\n",
       "      <td>American Airlines Arena</td>\n",
       "      <td>Miami, Florida</td>\n",
       "      <td>19,600</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>DAL</td>\n",
       "      <td>Dallas Mavericks</td>\n",
       "      <td>American Airlines Center</td>\n",
       "      <td>Dallas, Texas</td>\n",
       "      <td>19,200</td>\n",
       "      <td>2001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>ORL</td>\n",
       "      <td>Orlando Magic</td>\n",
       "      <td>Amway Center</td>\n",
       "      <td>Orlando, Florida</td>\n",
       "      <td>18,846</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Team_id Abbreviation          Fullname                     Arena  \\\n",
       "0        1          MIA        Miami Heat   American Airlines Arena   \n",
       "1        2          DAL  Dallas Mavericks  American Airlines Center   \n",
       "2        3          ORL     Orlando Magic              Amway Center   \n",
       "\n",
       "           Location Capacity  Opened  \n",
       "0    Miami, Florida   19,600    1999  \n",
       "1     Dallas, Texas   19,200    2001  \n",
       "2  Orlando, Florida   18,846    2010  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Table 'Teams'\n",
    "teams=team_profile[:]\n",
    "teams.insert(0, 'Team_id', range(1,len(teams)+1))\n",
    "teams.columns =['Team_id','Abbreviation', 'Fullname','Arena','Location','Capacity','Opened']\n",
    "teams.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "teams.to_csv('teams.csv',index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Normalization-- Table \"STAT_2014_2015\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.7/site-packages/pandas/core/indexing.py:543: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  self.obj[item] = s\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Player_id</th>\n",
       "      <th>Team_id</th>\n",
       "      <th>PTS</th>\n",
       "      <th>RPG</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "      <td>11.6</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>15.2</td>\n",
       "      <td>7.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>20</td>\n",
       "      <td>16.6</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Player_id  Team_id   PTS  RPG\n",
       "0          1       28  11.6  2.0\n",
       "1          2       23  15.2  7.2\n",
       "2          3       20  16.6  8.4"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Table 'stat_2014_2015'\n",
    "stat_2014_2015=player_stat[['Team','PTS','RPG']]\n",
    "stat_2014_2015.columns = ['Team_id','PTS','RPG']\n",
    "stat_2014_2015.insert(0, 'Player_id', range(1,len(stat_2014_2015)+1))\n",
    "stat_2014_2015\n",
    "for x in range(len(stat_2014_2015)):\n",
    "    if stat_2014_2015.iloc[x,1]=='MIA': stat_2014_2015.iloc[x,1]=1\n",
    "    elif stat_2014_2015.iloc[x,1]=='DAL': stat_2014_2015.iloc[x,1]=2\n",
    "    elif stat_2014_2015.iloc[x,1]=='ORL': stat_2014_2015.iloc[x,1]=3\n",
    "    elif stat_2014_2015.iloc[x,1]=='SAS': stat_2014_2015.iloc[x,1]=4\n",
    "    elif stat_2014_2015.iloc[x,1]=='IND': stat_2014_2015.iloc[x,1]=5\n",
    "    elif stat_2014_2015.iloc[x,1]=='BKN': stat_2014_2015.iloc[x,1]=6\n",
    "    elif stat_2014_2015.iloc[x,1]=='WAS': stat_2014_2015.iloc[x,1]=7\n",
    "    elif stat_2014_2015.iloc[x,1]=='OKC': stat_2014_2015.iloc[x,1]=8\n",
    "    elif stat_2014_2015.iloc[x,1]=='MEM': stat_2014_2015.iloc[x,1]=9\n",
    "    elif stat_2014_2015.iloc[x,1]=='MIL': stat_2014_2015.iloc[x,1]=10\n",
    "    elif stat_2014_2015.iloc[x,1]=='SAC': stat_2014_2015.iloc[x,1]=11\n",
    "    elif stat_2014_2015.iloc[x,1]=='DET': stat_2014_2015.iloc[x,1]=12\n",
    "    elif stat_2014_2015.iloc[x,1]=='NYK': stat_2014_2015.iloc[x,1]=13\n",
    "    elif stat_2014_2015.iloc[x,1]=='POR': stat_2014_2015.iloc[x,1]=14\n",
    "    elif stat_2014_2015.iloc[x,1]=='GSW': stat_2014_2015.iloc[x,1]=15\n",
    "    elif stat_2014_2015.iloc[x,1]=='DEN': stat_2014_2015.iloc[x,1]=16\n",
    "    elif stat_2014_2015.iloc[x,1]=='CLE': stat_2014_2015.iloc[x,1]=17\n",
    "    elif stat_2014_2015.iloc[x,1]=='TOR': stat_2014_2015.iloc[x,1]=18\n",
    "    elif stat_2014_2015.iloc[x,1]=='NOP': stat_2014_2015.iloc[x,1]=19\n",
    "    elif stat_2014_2015.iloc[x,1]=='CHA': stat_2014_2015.iloc[x,1]=20\n",
    "    elif stat_2014_2015.iloc[x,1]=='LAC': stat_2014_2015.iloc[x,1]=21\n",
    "    elif stat_2014_2015.iloc[x,1]=='LAL': stat_2014_2015.iloc[x,1]=22\n",
    "    elif stat_2014_2015.iloc[x,1]=='ATL': stat_2014_2015.iloc[x,1]=23\n",
    "    elif stat_2014_2015.iloc[x,1]=='PHX': stat_2014_2015.iloc[x,1]=24\n",
    "    elif stat_2014_2015.iloc[x,1]=='MIN': stat_2014_2015.iloc[x,1]=25\n",
    "    elif stat_2014_2015.iloc[x,1]=='BOS': stat_2014_2015.iloc[x,1]=26\n",
    "    elif stat_2014_2015.iloc[x,1]=='HOU': stat_2014_2015.iloc[x,1]=27\n",
    "    elif stat_2014_2015.iloc[x,1]=='CHI': stat_2014_2015.iloc[x,1]=28\n",
    "    elif stat_2014_2015.iloc[x,1]=='UTA': stat_2014_2015.iloc[x,1]=29\n",
    "    elif stat_2014_2015.iloc[x,1]=='PHI': stat_2014_2015.iloc[x,1]=30\n",
    "stat_2014_2015.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Normalization-- Table \"IG_PROFILE\" and \"IG_POST\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def post(name):\n",
    "    L = Instaloader()\n",
    "    posts =Profile.from_username(L.context, name).get_posts()\n",
    "    temp=pd.DataFrame()\n",
    "    SINCE = datetime.now()\n",
    "    UNTIL = datetime.now()- timedelta(days = 1)\n",
    "\n",
    "    for post in takewhile(lambda p: p.date > UNTIL, dropwhile(lambda p: p.date > SINCE, posts)):\n",
    "        tt = [post.date,post.caption,post.likes,post.comments]\n",
    "        temp=temp.append(tt)\n",
    "    return temp\n",
    "\n",
    "ig_n = pd.read_csv(\"player_ig2.csv\")\n",
    "L = Instaloader()\n",
    "ig_profile=pd.DataFrame()\n",
    "ig_post=pd.DataFrame()\n",
    "\n",
    "for x in range(len(ig_n)):\n",
    "    profile = Profile.from_username(L.context, ig_n.iat[x,2])\n",
    "    tt = pd.DataFrame(np.column_stack([ig_n.iat[x,0],\n",
    "                                       profile.full_name,profile.username, profile.userid,\n",
    "                                       profile.biography,profile.external_url,profile.mediacount,\n",
    "                                       profile.followers,profile.followees]))\n",
    "    ig_profile=ig_profile.append(tt)\n",
    "    \n",
    "    a=post(ig_n.iat[x,2])\n",
    "    for y in range(0,len(a),4):\n",
    "        zz=pd.DataFrame(np.column_stack([profile.userid,a.iat[y,0],a.iat[y+1,0],a.iat[y+2,0],a.iat[y+3,0]]))\n",
    "        ig_post=ig_post.append(zz) \n",
    "\n",
    "ig_post.insert(0, 'ig_post', range(1,len(ig_post)+1))\n",
    "ig_post.columns =['Postid','Userid','Time','Caption','Likes','Comments']\n",
    "ig_post.index = range(0,len(ig_post))\n",
    "ig_post['Time']= ig_post['Time'].astype('str')\n",
    "\n",
    "ig_profile.columns = ['Player_id','Fullname','Username','Userid','Bio','Url','Posts','Followers','Following']\n",
    "ig_profile.index = range(0,len(ig_profile))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "ig_post.head(3)\n",
    "ig_post.to_csv('ig_post.csv',index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "ig_profile\n",
    "ig_profile.to_csv('ig_profile.csv',index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Normalization-- Table \"IG_MOST\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def most_common(lst):\n",
    "    return max(set(lst), key=lst.count)\n",
    "\n",
    "def most(name):\n",
    "    L = Instaloader()\n",
    "    SINCE = datetime.now()\n",
    "    UNTIL = datetime.now()- timedelta(days = 30)\n",
    "    posts =Profile.from_username(L.context, name).get_posts()\n",
    "    \n",
    "    temp=[]\n",
    "    #for post in posts:\n",
    "    for post in takewhile(lambda p: p.date > UNTIL, dropwhile(lambda p: p.date > SINCE, posts)):\n",
    "        temp.extend(post.caption_hashtags)\n",
    "    if not temp:\n",
    "        p=['no hashtag within 30 days']\n",
    "    else:\n",
    "        p= most_common(temp)\n",
    "    \n",
    "    posts =Profile.from_username(L.context, name).get_posts()\n",
    "    q=[]\n",
    "    qwe=[]\n",
    "    for post in takewhile(lambda p: p.date > UNTIL, dropwhile(lambda p: p.date > SINCE, posts)):\n",
    "        qwe.append(post)\n",
    "    posts_sorted_by_likes = sorted(qwe, key = lambda p: p.likes + p.comments,reverse=True)\n",
    "    if not posts_sorted_by_likes:\n",
    "        q=['no post within 30 days']\n",
    "    else:\n",
    "        for post in islice(posts_sorted_by_likes, 0, 1):\n",
    "            q=[post.caption]\n",
    "    return p,q\n",
    "\n",
    "ig_n = pd.read_csv(\"player_ig2.csv\")\n",
    "\n",
    "L = Instaloader()\n",
    "ig_most=pd.DataFrame()\n",
    "\n",
    "for x in range(len(ig_n)):\n",
    "    profile = Profile.from_username(L.context, ig_n.iat[x,2])\n",
    "    a=most(ig_n.iat[x,2])\n",
    "    tt = pd.DataFrame(np.column_stack([profile.userid,a[0],a[1]]))\n",
    "    ig_most=ig_most.append(tt)\n",
    "ig_most.columns = ['Userid','Most_popular_hashtag','Most_popular_post']\n",
    "ig_most.index = range(0,len(ig_most))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Userid</th>\n",
       "      <th>Most_popular_hashtag</th>\n",
       "      <th>Most_popular_post</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10733526</td>\n",
       "      <td>ad</td>\n",
       "      <td>C us Rise!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1923491235</td>\n",
       "      <td>marchmadness</td>\n",
       "      <td>I love this time of year.  Where dreams come #...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>300139600</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>ü¶Ö</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>375417881</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8174195</td>\n",
       "      <td>str8up</td>\n",
       "      <td>Great win tonight #farouqisonfireüî•üî•üî• #str8up #...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>37867524</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Philly Hospitality</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>24949656</td>\n",
       "      <td>detroitbasketball</td>\n",
       "      <td>game timeü¶çü¶çü¶ç\\n#DetroitBasketball</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6246343</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>In a good book in a hotel... - @bigkrit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>305609563</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3518326383</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>36118956</td>\n",
       "      <td>theshophbo</td>\n",
       "      <td>Never imagined being in this room!#TheShopHBO ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>13516273</td>\n",
       "      <td>sense</td>\n",
       "      <td>The ‚ÄòGun Man‚Äô is back üí•üëåüèæ‚ÄºÔ∏è Finna do some folk...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>218386695</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Quick trim üíà</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2031038549</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>54752764</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>We all know what d wade meant to us hoopers......</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>8689219308</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>29874123</td>\n",
       "      <td>gameday</td>\n",
       "      <td>Idk why Iowa state fans hate me... my memories...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>573482256</td>\n",
       "      <td>buzzcity</td>\n",
       "      <td>Saturday Mood! üôåüèæüëäüèæüôèüèæ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>26867055</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>all-star ‚Äò19 in the books. thank you, Charlott...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>297672504</td>\n",
       "      <td>b4b4</td>\n",
       "      <td>#sretnanovagodina #bzb #babayaro #B4B4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>281835802</td>\n",
       "      <td>wearewhatweeat</td>\n",
       "      <td>I thought i asked for a SMALL coffee. \\nRemind...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>180962639</td>\n",
       "      <td>thatboyfinally21</td>\n",
       "      <td>On Go!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>365278709</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>üèÄüí™üèæ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>19447170</td>\n",
       "      <td>theland</td>\n",
       "      <td>#THELAND</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>234952067</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>246667855</td>\n",
       "      <td>holdat</td>\n",
       "      <td>DUKE ALL DAY!!!! Who You Got? #marchmadness #g...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>260910139</td>\n",
       "      <td>repost</td>\n",
       "      <td>Please keep us in your prayers..\\nüôèüèø‚ù§Ô∏èThanks @...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>194141968</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>happy birthday to the love of my life!! i‚Äôm so...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>21707908</td>\n",
       "      <td>someonethrowmeabeerhand</td>\n",
       "      <td>Congrats ya Chucker! @kingjames. @richardajeff...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>317260068</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>192371147</td>\n",
       "      <td>keepthewheelsturning</td>\n",
       "      <td>Quick business trip and dub with @andredrummon...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>159</th>\n",
       "      <td>3237506616</td>\n",
       "      <td>broadcastcouplegoals</td>\n",
       "      <td>Guys I don‚Äôt have that many fans, you can‚Äôt do...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>54963128</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>342316123</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>My company @PlayLine is giving you a chance to...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>7552274</td>\n",
       "      <td>raporgototheleague</td>\n",
       "      <td>#squad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>43983578</td>\n",
       "      <td>ontothenextone</td>\n",
       "      <td>Qui veut ma peau perdra la sienne...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>23489943</td>\n",
       "      <td>howhungryareyou</td>\n",
       "      <td>Vibing to @yvonne_chakachaka üôåüèøUmqombothi with...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>592796850</td>\n",
       "      <td>goefes</td>\n",
       "      <td>S/o to my guy @thomashengge !! Dope video so I...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>476791482</td>\n",
       "      <td>fortwo</td>\n",
       "      <td>~Jonah Jazmine Livingston \\nNo greater feeling...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>174291537</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Hanging on the off day with my buddy @scott_ho...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>324599988</td>\n",
       "      <td>internationalwomensday</td>\n",
       "      <td>Celebrating the women in my life today &amp; every...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>4110707274</td>\n",
       "      <td>holdtight</td>\n",
       "      <td>EZGEGE!!! ‚òï\\nApex is üî•üî•üî•\\n#holdtight #onepunch...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>13948994</td>\n",
       "      <td>godisgood</td>\n",
       "      <td>Love this game and all the highs and lows that...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>1638586781</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>594752713</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>My son mom e‚Äôrything. I treat her like a üèÜ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>211849705</td>\n",
       "      <td>goblue</td>\n",
       "      <td>Road Trippin!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>303567942</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>–ü–æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è –≤ –ø—è—Ç–Ω–∏—Ü—É —Å —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∫–æ–º–∞–Ω–¥–æ–π @...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>8715481</td>\n",
       "      <td>oscars</td>\n",
       "      <td>Bobi and Tobi, the only paparazzi team you can...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>1998076484</td>\n",
       "      <td>goat</td>\n",
       "      <td>Throwback Picture with the #GOAT and my brothe...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>3212652021</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>11773708</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Two cool parents right there. Baby girl coming...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>41940584</td>\n",
       "      <td>stayonpoint</td>\n",
       "      <td>GoBlue „ÄΩÔ∏è #BeatState</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>20979077</td>\n",
       "      <td>dayone</td>\n",
       "      <td>It‚Äôs that time of year ... win or go home... #...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>260001551</td>\n",
       "      <td>bigfitoftheday</td>\n",
       "      <td>Repost  @gq ...#BigFitoftheDay: Tyson Chandler...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>487672208</td>\n",
       "      <td>og</td>\n",
       "      <td>@dwyanewade why not my boy?? Lol. Just when I ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>23755775</td>\n",
       "      <td>trulyunbreakable</td>\n",
       "      <td>Without Rain Nothing Grows. ‚òîÔ∏è</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>2088240108</td>\n",
       "      <td>marchmadness</td>\n",
       "      <td>GAME DAY! Best rivalry in sports. I miss playi...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>191871035</td>\n",
       "      <td>bullsnation</td>\n",
       "      <td>Appreciate all the Birthday wishes!üéÇ #24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>183007662</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>22787262</td>\n",
       "      <td>memories</td>\n",
       "      <td>Thank you @atlhawks and fans for showing love....</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>188 rows √ó 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Userid       Most_popular_hashtag  \\\n",
       "0      10733526                         ad   \n",
       "1    1923491235               marchmadness   \n",
       "2     300139600  no hashtag within 30 days   \n",
       "3     375417881  no hashtag within 30 days   \n",
       "4       8174195                     str8up   \n",
       "5      37867524  no hashtag within 30 days   \n",
       "6      24949656          detroitbasketball   \n",
       "7       6246343  no hashtag within 30 days   \n",
       "8     305609563  no hashtag within 30 days   \n",
       "9    3518326383  no hashtag within 30 days   \n",
       "10     36118956                 theshophbo   \n",
       "11     13516273                      sense   \n",
       "12    218386695  no hashtag within 30 days   \n",
       "13   2031038549  no hashtag within 30 days   \n",
       "14     54752764  no hashtag within 30 days   \n",
       "15   8689219308  no hashtag within 30 days   \n",
       "16     29874123                    gameday   \n",
       "17    573482256                   buzzcity   \n",
       "18     26867055  no hashtag within 30 days   \n",
       "19    297672504                       b4b4   \n",
       "20    281835802             wearewhatweeat   \n",
       "21    180962639           thatboyfinally21   \n",
       "22    365278709  no hashtag within 30 days   \n",
       "23     19447170                    theland   \n",
       "24    234952067  no hashtag within 30 days   \n",
       "25    246667855                     holdat   \n",
       "26    260910139                     repost   \n",
       "27    194141968  no hashtag within 30 days   \n",
       "28     21707908    someonethrowmeabeerhand   \n",
       "29    317260068  no hashtag within 30 days   \n",
       "..          ...                        ...   \n",
       "158   192371147       keepthewheelsturning   \n",
       "159  3237506616       broadcastcouplegoals   \n",
       "160    54963128  no hashtag within 30 days   \n",
       "161   342316123  no hashtag within 30 days   \n",
       "162     7552274         raporgototheleague   \n",
       "163    43983578             ontothenextone   \n",
       "164    23489943            howhungryareyou   \n",
       "165   592796850                     goefes   \n",
       "166   476791482                     fortwo   \n",
       "167   174291537  no hashtag within 30 days   \n",
       "168   324599988     internationalwomensday   \n",
       "169  4110707274                  holdtight   \n",
       "170    13948994                  godisgood   \n",
       "171  1638586781  no hashtag within 30 days   \n",
       "172   594752713  no hashtag within 30 days   \n",
       "173   211849705                     goblue   \n",
       "174   303567942  no hashtag within 30 days   \n",
       "175     8715481                     oscars   \n",
       "176  1998076484                       goat   \n",
       "177  3212652021  no hashtag within 30 days   \n",
       "178    11773708  no hashtag within 30 days   \n",
       "179    41940584                stayonpoint   \n",
       "180    20979077                     dayone   \n",
       "181   260001551             bigfitoftheday   \n",
       "182   487672208                         og   \n",
       "183    23755775           trulyunbreakable   \n",
       "184  2088240108               marchmadness   \n",
       "185   191871035                bullsnation   \n",
       "186   183007662  no hashtag within 30 days   \n",
       "187    22787262                   memories   \n",
       "\n",
       "                                     Most_popular_post  \n",
       "0                                           C us Rise!  \n",
       "1    I love this time of year.  Where dreams come #...  \n",
       "2                                                    ü¶Ö  \n",
       "3                               no post within 30 days  \n",
       "4    Great win tonight #farouqisonfireüî•üî•üî• #str8up #...  \n",
       "5                                   Philly Hospitality  \n",
       "6                     game timeü¶çü¶çü¶ç\\n#DetroitBasketball  \n",
       "7              In a good book in a hotel... - @bigkrit  \n",
       "8                               no post within 30 days  \n",
       "9                               no post within 30 days  \n",
       "10   Never imagined being in this room!#TheShopHBO ...  \n",
       "11   The ‚ÄòGun Man‚Äô is back üí•üëåüèæ‚ÄºÔ∏è Finna do some folk...  \n",
       "12                                        Quick trim üíà  \n",
       "13                              no post within 30 days  \n",
       "14   We all know what d wade meant to us hoopers......  \n",
       "15                              no post within 30 days  \n",
       "16   Idk why Iowa state fans hate me... my memories...  \n",
       "17                               Saturday Mood! üôåüèæüëäüèæüôèüèæ  \n",
       "18   all-star ‚Äò19 in the books. thank you, Charlott...  \n",
       "19              #sretnanovagodina #bzb #babayaro #B4B4  \n",
       "20   I thought i asked for a SMALL coffee. \\nRemind...  \n",
       "21                                              On Go!  \n",
       "22                                                 üèÄüí™üèæ  \n",
       "23                                            #THELAND  \n",
       "24                              no post within 30 days  \n",
       "25   DUKE ALL DAY!!!! Who You Got? #marchmadness #g...  \n",
       "26   Please keep us in your prayers..\\nüôèüèø‚ù§Ô∏èThanks @...  \n",
       "27   happy birthday to the love of my life!! i‚Äôm so...  \n",
       "28   Congrats ya Chucker! @kingjames. @richardajeff...  \n",
       "29                              no post within 30 days  \n",
       "..                                                 ...  \n",
       "158  Quick business trip and dub with @andredrummon...  \n",
       "159  Guys I don‚Äôt have that many fans, you can‚Äôt do...  \n",
       "160                             no post within 30 days  \n",
       "161  My company @PlayLine is giving you a chance to...  \n",
       "162                                             #squad  \n",
       "163               Qui veut ma peau perdra la sienne...  \n",
       "164  Vibing to @yvonne_chakachaka üôåüèøUmqombothi with...  \n",
       "165  S/o to my guy @thomashengge !! Dope video so I...  \n",
       "166  ~Jonah Jazmine Livingston \\nNo greater feeling...  \n",
       "167  Hanging on the off day with my buddy @scott_ho...  \n",
       "168  Celebrating the women in my life today & every...  \n",
       "169  EZGEGE!!! ‚òï\\nApex is üî•üî•üî•\\n#holdtight #onepunch...  \n",
       "170  Love this game and all the highs and lows that...  \n",
       "171                             no post within 30 days  \n",
       "172         My son mom e‚Äôrything. I treat her like a üèÜ  \n",
       "173                                      Road Trippin!  \n",
       "174  –ü–æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è –≤ –ø—è—Ç–Ω–∏—Ü—É —Å —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∫–æ–º–∞–Ω–¥–æ–π @...  \n",
       "175  Bobi and Tobi, the only paparazzi team you can...  \n",
       "176  Throwback Picture with the #GOAT and my brothe...  \n",
       "177                             no post within 30 days  \n",
       "178  Two cool parents right there. Baby girl coming...  \n",
       "179                               GoBlue „ÄΩÔ∏è #BeatState  \n",
       "180  It‚Äôs that time of year ... win or go home... #...  \n",
       "181  Repost  @gq ...#BigFitoftheDay: Tyson Chandler...  \n",
       "182  @dwyanewade why not my boy?? Lol. Just when I ...  \n",
       "183                     Without Rain Nothing Grows. ‚òîÔ∏è  \n",
       "184  GAME DAY! Best rivalry in sports. I miss playi...  \n",
       "185           Appreciate all the Birthday wishes!üéÇ #24  \n",
       "186                             no post within 30 days  \n",
       "187  Thank you @atlhawks and fans for showing love....  \n",
       "\n",
       "[188 rows x 3 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ig_most\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import Tables into SQL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "conn = sqlite3.connect('sample1.db')\n",
    "c = conn.cursor()\n",
    "\n",
    "# Import dataframes to database\n",
    "player_profile.to_sql('a', conn, if_exists='replace', index=False)\n",
    "teams.to_sql('b', conn, if_exists='replace', index=False)\n",
    "stat_2014_2015.to_sql('c', conn, if_exists='replace', index=False)\n",
    "ig_profile.to_sql('d', conn, if_exists='replace', index=False)\n",
    "ig_post.to_sql('e', conn, if_exists='replace', index=False)\n",
    "ig_most.to_sql('f', conn, if_exists='replace', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creat Tables\n",
    "# Table 'PROFILE'\n",
    "c.execute('''DROP TABLE IF EXISTS PROFILE;''')\n",
    "c.execute('''\n",
    "          CREATE TABLE PROFILE\n",
    "          (Player_id INTEGER NOT NULL, Name VARCHAR(50), Age INTEGER,\n",
    "          Birth_place VARCHAR(10), Birthdate VARCHAR(50), Height DOUBLE, Weight DOUBLE, Position VARCHAR(5),\n",
    "          PRIMARY KEY (Player_id))\n",
    "          ''')\n",
    "c.execute(\"INSERT INTO PROFILE SELECT * FROM a;\")\n",
    "c.execute(\"DROP TABLE a;\")\n",
    "\n",
    "# Table 'TEAMS'\n",
    "c.execute('''DROP TABLE IF EXISTS TEAMS;''')\n",
    "c.execute('''\n",
    "          CREATE TABLE TEAMS\n",
    "          (Team_id INTEGER NOT NULL, Abbreviation VARCHAR(10),Fullname VARCHAR(100),\n",
    "          Arena VARCHAR(100), Location VARCHAR(100), Capacity INTEGER, Opened INTEGER,\n",
    "          PRIMARY KEY (Team_id))\n",
    "          ''')\n",
    "c.execute(\"INSERT INTO TEAMS SELECT * FROM b;\")\n",
    "c.execute(\"DROP TABLE b;\")\n",
    "\n",
    "# Table 'STAT_2014_2015'\n",
    "c.execute('''DROP TABLE IF EXISTS STAT_2014_2015;''')\n",
    "c.execute('''\n",
    "          CREATE TABLE STAT_2014_2015\n",
    "          (Player_id INTEGER NOT NULL, Team_id INTEGER NOT NULL,PTS DOUBLE, RPG DOUBLE,\n",
    "          PRIMARY KEY (Player_id,Team_id),\n",
    "          FOREIGN KEY (Team_id) REFERENCES TEAMS(Team_id),\n",
    "          FOREIGN KEY (Player_id) REFERENCES PROFILE(Player_id),\n",
    "          FOREIGN KEY (Player_id) REFERENCES IG_PROFILE(Player_id))\n",
    "          ''')\n",
    "c.execute(\"INSERT INTO STAT_2014_2015 SELECT * FROM c;\")\n",
    "c.execute(\"DROP TABLE c;\")\n",
    "\n",
    "# Table 'IG_PROFILE'\n",
    "c.execute('''DROP TABLE IF EXISTS IG_PROFILE;''')\n",
    "c.execute('''\n",
    "          CREATE TABLE IG_PROFILE\n",
    "          (Player_id INTEGER NOT NULL, Fullname VARCHAR(50),Username VARCHAR(50),\n",
    "          Userid INTEGER, Bio VARCHAR(500), Url VARCHAR(500), Posts INTEGER, Followers INTEGER, Following INTEGER,\n",
    "          PRIMARY KEY (Player_id),\n",
    "          FOREIGN KEY (Userid) REFERENCES IG_POST(Userid),\n",
    "          FOREIGN KEY (Userid) REFERENCES IG_MOST(Userid))\n",
    "          ''')\n",
    "c.execute(\"INSERT INTO IG_PROFILE SELECT * FROM d;\")\n",
    "c.execute(\"DROP TABLE d;\")\n",
    "\n",
    "# Table 'IG_POST'\n",
    "c.execute('''DROP TABLE IF EXISTS IG_POST;''')\n",
    "c.execute('''\n",
    "          CREATE TABLE IG_POST\n",
    "          (Postid INTEGER NOT NULL, Userid INTEGER NOT NULL, Time DATETIME,Caption VARCHAR(1000),\n",
    "          Likes INTEGER, Comments INTEGER,\n",
    "          PRIMARY KEY (Postid))\n",
    "          ''')\n",
    "c.execute(\"INSERT INTO IG_POST SELECT * FROM e;\")\n",
    "c.execute(\"DROP TABLE e;\")\n",
    "\n",
    "\n",
    "# Table 'IG_MOST'\n",
    "c.execute('''DROP TABLE IF EXISTS IG_MOST;''')\n",
    "c.execute('''\n",
    "          CREATE TABLE IG_MOST\n",
    "          (Userid INTEGER NOT NULL,Most_popular_hashtag VARCHAR(50),Most_popular_post VARCHAR(1000),\n",
    "          PRIMARY KEY (Userid))\n",
    "          ''')\n",
    "c.execute(\"INSERT INTO IG_MOST SELECT * FROM f;\")\n",
    "c.execute(\"DROP TABLE f;\")\n",
    "\n",
    "conn.commit()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### a. What user posted this (e.g. tweet, facebook post, IG post, etc.)?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### b. When did the user post this (e.g. tweet, facebook post, IG post, etc.)?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As the below query, take player \"Damian Lillard\" as example. The column \"Username\" shows who posted this, colume \"Time\" shows when did it posted and column \"Caption\" shows the content of the post."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Username</th>\n",
       "      <th>Time</th>\n",
       "      <th>Caption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Damian Lillard</td>\n",
       "      <td>damianlillard</td>\n",
       "      <td>2019-03-05 16:39:10</td>\n",
       "      <td>Hello</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Name       Username                 Time Caption\n",
       "0  Damian Lillard  damianlillard  2019-03-05 16:39:10   Hello"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_sql('''SELECT PROFILE.Name AS Name, Username, Time, Caption\n",
    "            FROM STAT_2014_2015\n",
    "            INNER JOIN PROFILE ON PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN IG_PROFILE ON IG_PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN IG_POST ON IG_PROFILE.Userid=IG_POST.Userid\n",
    "            WHERE Name=\"Damian Lillard\"\n",
    "            LIMIT 1;\n",
    "            ''', conn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### c. What posts has this user posted in the past 24 hours?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As the below query, the table \"IG_POST\" contains the posts in the past 24 hours."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Username</th>\n",
       "      <th>Time</th>\n",
       "      <th>Caption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Damian Lillard</td>\n",
       "      <td>damianlillard</td>\n",
       "      <td>2019-03-05 16:39:10</td>\n",
       "      <td>Hello</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Damian Lillard</td>\n",
       "      <td>damianlillard</td>\n",
       "      <td>2019-03-06 05:30:09</td>\n",
       "      <td>3 weeks on the road... tough way to end it ü§∑üèΩ‚Äç...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Name       Username                 Time  \\\n",
       "0  Damian Lillard  damianlillard  2019-03-05 16:39:10   \n",
       "1  Damian Lillard  damianlillard  2019-03-06 05:30:09   \n",
       "\n",
       "                                             Caption  \n",
       "0                                              Hello  \n",
       "1  3 weeks on the road... tough way to end it ü§∑üèΩ‚Äç...  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_sql('''SELECT PROFILE.Name AS Name, Username, Time, Caption\n",
    "            FROM STAT_2014_2015\n",
    "            INNER JOIN PROFILE ON PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN IG_PROFILE ON IG_PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN IG_POST ON IG_PROFILE.Userid=IG_POST.Userid\n",
    "            WHERE Name=\"Damian Lillard\";\n",
    "            ''', conn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### d. How many post has this user posted in the past 24 hours?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>COUNT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Damian Lillard</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Name  COUNT\n",
       "0  Damian Lillard      2"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_sql('''SELECT PROFILE.Name AS Name, COUNT(Name) AS COUNT\n",
    "            FROM STAT_2014_2015\n",
    "            INNER JOIN PROFILE ON PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN IG_PROFILE ON IG_PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN IG_POST ON IG_PROFILE.Userid=IG_POST.Userid\n",
    "            WHERE Name=\"Damian Lillard\"\n",
    "            GROUP BY Name\n",
    "            ORDER BY COUNT DESC;\n",
    "            ''', conn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### e. What keywords/ hashtags are popular? "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### f. What posts are popular?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As the below query, the column \"Most_popular_hashtag\" shows the most frequently used hashtag of each player's post.\n",
    "Also column \"Most_popular_post\" shows most popular post calculated by total counts of likes and comments of each player.\n",
    "\n",
    "Note: Only downloaded the data from Instagram within 30 days, because if API try too many times to download from Instagram, it will show the error of too many requests and will be temporarily blocked."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Most_popular_hashtag</th>\n",
       "      <th>Most_popular_post</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Al Horford</td>\n",
       "      <td>ad</td>\n",
       "      <td>Embrace the journey!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alan Anderson</td>\n",
       "      <td>work</td>\n",
       "      <td>Thanx @stephrok1 for the dope picüî•üî•üî•, your ski...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alex Len</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alexis Ajinca</td>\n",
       "      <td>truelove</td>\n",
       "      <td>I‚Äôm in love with you, and I‚Äôm not in the busin...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Al-Farouq Aminu</td>\n",
       "      <td>str8up</td>\n",
       "      <td>A glimps of two killas before a meal #farouqis...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Amir Johnson</td>\n",
       "      <td>thechidrenareourfuture</td>\n",
       "      <td>Today‚Äôs I Had The Pleasure Of Being A Judge Fo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Andre Drummond</td>\n",
       "      <td>detroitbasketball</td>\n",
       "      <td>Overly focused. #0 ü¶çü¶ç</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Andre Iguodala</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>In a good book in a hotel... - @bigkrit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Andre Roberson</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Andrew Bogut</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Anthony Davis</td>\n",
       "      <td>6</td>\n",
       "      <td>Another All-Star in the books!!! Had a fun tim...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Anthony Morrow</td>\n",
       "      <td>charlotte</td>\n",
       "      <td>Amo TV All Star Charlotte edition, S/O my potn...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Aron Baynes</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Quick trim üíà</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Arron Afflalo</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Austin Rivers</td>\n",
       "      <td>ad</td>\n",
       "      <td>We all know what d wade meant to us hoopers......</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Avery Bradley</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Ben McLemore</td>\n",
       "      <td>nuffsaid</td>\n",
       "      <td>Sac fans, thank you for the ongoing support.  ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Bismack Biyombo</td>\n",
       "      <td>buzzcity</td>\n",
       "      <td>SQUAD UP\\n\\n#NBAAllStar Weekend 2019 @hornets ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Blake Griffin</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>all-star ‚Äò19 in the books. thank you, Charlott...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Bojan Bogdanovic</td>\n",
       "      <td>babangida</td>\n",
       "      <td>Another one üîπüî∏ #sretnanovagodina #babangida #ƒá...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Boris Diaw</td>\n",
       "      <td>nespressotalents</td>\n",
       "      <td>I thought i asked for a SMALL coffee. \\nRemind...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Bradley Beal</td>\n",
       "      <td>thisisyourtime</td>\n",
       "      <td>That‚Äôs a wrap! Thank you Charlotte, thank you ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Brandon Bass</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Daddy/Daughter dance with my baby girl</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Brandon Knight</td>\n",
       "      <td>theland</td>\n",
       "      <td>#THELAND</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Brian Roberts</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Carlos Boozer</td>\n",
       "      <td>holdat</td>\n",
       "      <td>Just Hosted My First Hoop Streams Show With @c...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Caron Butler</td>\n",
       "      <td>repost</td>\n",
       "      <td>Pretty Dope moment!üôèüèø\\n#LastDance</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Chandler Parsons</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>happy birthday to the love of my life!! i‚Äôm so...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Channing Frye</td>\n",
       "      <td>someonethrowmeabeerhand</td>\n",
       "      <td>Playing at MSG for the last time last night, h...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Chase Budinger</td>\n",
       "      <td>avp</td>\n",
       "      <td>Got in a solid week of training with @caseypat...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>Reggie Jackson</td>\n",
       "      <td>alllove</td>\n",
       "      <td>Quick business trip and dub with @andredrummon...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>159</th>\n",
       "      <td>Richard Jefferson</td>\n",
       "      <td>broadcastcouplegoals</td>\n",
       "      <td>üö®100 Episodes üö®... this post is a thank you to...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>Robin Lopez</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>Roy Hibbert</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>My company @PlayLine is giving you a chance to...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>Rudy Gay</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Friday is for the fans üôè Enter for a chance fo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>Rudy Gobert</td>\n",
       "      <td>ontothenextone</td>\n",
       "      <td>‚è≥</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>Serge Ibaka</td>\n",
       "      <td>howhungryareyou</td>\n",
       "      <td>This is why I work so hard , so I can hang out...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>Shane Larkin</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>Shaun Livingston</td>\n",
       "      <td>reallove</td>\n",
       "      <td>~Jonah Jazmine Livingston \\nNo greater feeling...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>Spencer Hawes</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>Stephen Curry</td>\n",
       "      <td>buzzcity</td>\n",
       "      <td>1992 to 2019. always repping the QC! #buzzcity...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>Steven Adams</td>\n",
       "      <td>saitama</td>\n",
       "      <td>EZGEGE!!! ‚òï\\nApex is üî•üî•üî•\\n#holdtight #onepunch...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>Taj Gibson</td>\n",
       "      <td>thankful</td>\n",
       "      <td>Love this game and all the highs and lows that...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>Tarik Black</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>She is my CHOSEN today, tomorrow, and forever!...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>Terrence Ross</td>\n",
       "      <td>happyvalentinesday</td>\n",
       "      <td>I felt like @kobebryant for a quick second. üòÜü§òüèæüî•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>Tim Hardaway Jr.</td>\n",
       "      <td>gameday</td>\n",
       "      <td>New threads‚ÄºÔ∏è #gameday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>Timofey Mozgov</td>\n",
       "      <td>—Å–ø–æ—Ä—Ç</td>\n",
       "      <td>8 –ª–µ—Ç –∂–µ–Ω–∞—Ç—ã –∏ 10 –ª–µ—Ç –≤–º–µ—Å—Ç–µ;) –ò –¥–∞ –º—ã —Ç–æ–∂–µ –∏–Ω...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>Tobias Harris</td>\n",
       "      <td>oscars</td>\n",
       "      <td>Excited for this new opportunity with the @six...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>Tony Parker</td>\n",
       "      <td>charlotte</td>\n",
       "      <td>Had the best time in Charlotte with my friends...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>Tony Snell</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>Trevor Booker</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Big Squad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>Trey Burke</td>\n",
       "      <td>stayonpoint</td>\n",
       "      <td>Dallas! Excited to join this organization and ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>Ty Lawson</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>@therealtarzann where u at</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>Tyson Chandler</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>Tune In TONIGHT for the Premiere of @nowwithna...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>Udonis Haslem</td>\n",
       "      <td>og</td>\n",
       "      <td>@dwyanewade why not my boy?? Lol. Just when I ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>Victor Oladipo</td>\n",
       "      <td>trulyunbreakable</td>\n",
       "      <td>They can‚Äôt stop me! Even if they stopped me! (...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>Wayne Ellington</td>\n",
       "      <td>escowiththeorchestra</td>\n",
       "      <td>GAME DAY! Best rivalry in sports. I miss playi...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>Zach LaVine</td>\n",
       "      <td>bullsnation</td>\n",
       "      <td>Time flies. Best Dunk Contest of our generatio...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>Zach Randolph</td>\n",
       "      <td>no hashtag within 30 days</td>\n",
       "      <td>no post within 30 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>Zaza Pachulia</td>\n",
       "      <td>memories</td>\n",
       "      <td>These guys make me look young. \\nThanks for bd...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>188 rows √ó 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name       Most_popular_hashtag  \\\n",
       "0           Al Horford                         ad   \n",
       "1        Alan Anderson                       work   \n",
       "2             Alex Len  no hashtag within 30 days   \n",
       "3        Alexis Ajinca                   truelove   \n",
       "4      Al-Farouq Aminu                     str8up   \n",
       "5         Amir Johnson     thechidrenareourfuture   \n",
       "6       Andre Drummond          detroitbasketball   \n",
       "7       Andre Iguodala  no hashtag within 30 days   \n",
       "8       Andre Roberson  no hashtag within 30 days   \n",
       "9         Andrew Bogut  no hashtag within 30 days   \n",
       "10       Anthony Davis                          6   \n",
       "11      Anthony Morrow                  charlotte   \n",
       "12         Aron Baynes  no hashtag within 30 days   \n",
       "13       Arron Afflalo  no hashtag within 30 days   \n",
       "14       Austin Rivers                         ad   \n",
       "15       Avery Bradley  no hashtag within 30 days   \n",
       "16        Ben McLemore                   nuffsaid   \n",
       "17     Bismack Biyombo                   buzzcity   \n",
       "18       Blake Griffin  no hashtag within 30 days   \n",
       "19    Bojan Bogdanovic                  babangida   \n",
       "20          Boris Diaw           nespressotalents   \n",
       "21        Bradley Beal             thisisyourtime   \n",
       "22        Brandon Bass  no hashtag within 30 days   \n",
       "23      Brandon Knight                    theland   \n",
       "24       Brian Roberts  no hashtag within 30 days   \n",
       "25       Carlos Boozer                     holdat   \n",
       "26        Caron Butler                     repost   \n",
       "27    Chandler Parsons  no hashtag within 30 days   \n",
       "28       Channing Frye    someonethrowmeabeerhand   \n",
       "29      Chase Budinger                        avp   \n",
       "..                 ...                        ...   \n",
       "158     Reggie Jackson                    alllove   \n",
       "159  Richard Jefferson       broadcastcouplegoals   \n",
       "160        Robin Lopez  no hashtag within 30 days   \n",
       "161        Roy Hibbert  no hashtag within 30 days   \n",
       "162           Rudy Gay  no hashtag within 30 days   \n",
       "163        Rudy Gobert             ontothenextone   \n",
       "164        Serge Ibaka            howhungryareyou   \n",
       "165       Shane Larkin  no hashtag within 30 days   \n",
       "166   Shaun Livingston                   reallove   \n",
       "167      Spencer Hawes  no hashtag within 30 days   \n",
       "168      Stephen Curry                   buzzcity   \n",
       "169       Steven Adams                    saitama   \n",
       "170         Taj Gibson                   thankful   \n",
       "171        Tarik Black  no hashtag within 30 days   \n",
       "172      Terrence Ross         happyvalentinesday   \n",
       "173   Tim Hardaway Jr.                    gameday   \n",
       "174     Timofey Mozgov                      —Å–ø–æ—Ä—Ç   \n",
       "175      Tobias Harris                     oscars   \n",
       "176        Tony Parker                  charlotte   \n",
       "177         Tony Snell  no hashtag within 30 days   \n",
       "178      Trevor Booker  no hashtag within 30 days   \n",
       "179         Trey Burke                stayonpoint   \n",
       "180          Ty Lawson  no hashtag within 30 days   \n",
       "181     Tyson Chandler  no hashtag within 30 days   \n",
       "182      Udonis Haslem                         og   \n",
       "183     Victor Oladipo           trulyunbreakable   \n",
       "184    Wayne Ellington       escowiththeorchestra   \n",
       "185        Zach LaVine                bullsnation   \n",
       "186      Zach Randolph  no hashtag within 30 days   \n",
       "187      Zaza Pachulia                   memories   \n",
       "\n",
       "                                     Most_popular_post  \n",
       "0                                 Embrace the journey!  \n",
       "1    Thanx @stephrok1 for the dope picüî•üî•üî•, your ski...  \n",
       "2                               no post within 30 days  \n",
       "3    I‚Äôm in love with you, and I‚Äôm not in the busin...  \n",
       "4    A glimps of two killas before a meal #farouqis...  \n",
       "5    Today‚Äôs I Had The Pleasure Of Being A Judge Fo...  \n",
       "6                                Overly focused. #0 ü¶çü¶ç  \n",
       "7              In a good book in a hotel... - @bigkrit  \n",
       "8                               no post within 30 days  \n",
       "9                               no post within 30 days  \n",
       "10   Another All-Star in the books!!! Had a fun tim...  \n",
       "11   Amo TV All Star Charlotte edition, S/O my potn...  \n",
       "12                                        Quick trim üíà  \n",
       "13                              no post within 30 days  \n",
       "14   We all know what d wade meant to us hoopers......  \n",
       "15                              no post within 30 days  \n",
       "16   Sac fans, thank you for the ongoing support.  ...  \n",
       "17   SQUAD UP\\n\\n#NBAAllStar Weekend 2019 @hornets ...  \n",
       "18   all-star ‚Äò19 in the books. thank you, Charlott...  \n",
       "19   Another one üîπüî∏ #sretnanovagodina #babangida #ƒá...  \n",
       "20   I thought i asked for a SMALL coffee. \\nRemind...  \n",
       "21   That‚Äôs a wrap! Thank you Charlotte, thank you ...  \n",
       "22              Daddy/Daughter dance with my baby girl  \n",
       "23                                            #THELAND  \n",
       "24                              no post within 30 days  \n",
       "25   Just Hosted My First Hoop Streams Show With @c...  \n",
       "26                   Pretty Dope moment!üôèüèø\\n#LastDance  \n",
       "27   happy birthday to the love of my life!! i‚Äôm so...  \n",
       "28   Playing at MSG for the last time last night, h...  \n",
       "29   Got in a solid week of training with @caseypat...  \n",
       "..                                                 ...  \n",
       "158  Quick business trip and dub with @andredrummon...  \n",
       "159  üö®100 Episodes üö®... this post is a thank you to...  \n",
       "160                             no post within 30 days  \n",
       "161  My company @PlayLine is giving you a chance to...  \n",
       "162  Friday is for the fans üôè Enter for a chance fo...  \n",
       "163                                                  ‚è≥  \n",
       "164  This is why I work so hard , so I can hang out...  \n",
       "165                             no post within 30 days  \n",
       "166  ~Jonah Jazmine Livingston \\nNo greater feeling...  \n",
       "167                             no post within 30 days  \n",
       "168  1992 to 2019. always repping the QC! #buzzcity...  \n",
       "169  EZGEGE!!! ‚òï\\nApex is üî•üî•üî•\\n#holdtight #onepunch...  \n",
       "170  Love this game and all the highs and lows that...  \n",
       "171  She is my CHOSEN today, tomorrow, and forever!...  \n",
       "172   I felt like @kobebryant for a quick second. üòÜü§òüèæüî•  \n",
       "173                             New threads‚ÄºÔ∏è #gameday  \n",
       "174  8 –ª–µ—Ç –∂–µ–Ω–∞—Ç—ã –∏ 10 –ª–µ—Ç –≤–º–µ—Å—Ç–µ;) –ò –¥–∞ –º—ã —Ç–æ–∂–µ –∏–Ω...  \n",
       "175  Excited for this new opportunity with the @six...  \n",
       "176  Had the best time in Charlotte with my friends...  \n",
       "177                             no post within 30 days  \n",
       "178                                          Big Squad  \n",
       "179  Dallas! Excited to join this organization and ...  \n",
       "180                         @therealtarzann where u at  \n",
       "181  Tune In TONIGHT for the Premiere of @nowwithna...  \n",
       "182  @dwyanewade why not my boy?? Lol. Just when I ...  \n",
       "183  They can‚Äôt stop me! Even if they stopped me! (...  \n",
       "184  GAME DAY! Best rivalry in sports. I miss playi...  \n",
       "185  Time flies. Best Dunk Contest of our generatio...  \n",
       "186                             no post within 30 days  \n",
       "187  These guys make me look young. \\nThanks for bd...  \n",
       "\n",
       "[188 rows x 3 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# show the most popular hashtags and post for every players.\n",
    "pd.read_sql('''SELECT PROFILE.Name AS Name, Most_popular_hashtag, Most_popular_post\n",
    "            FROM STAT_2014_2015\n",
    "            INNER JOIN PROFILE ON PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN IG_PROFILE ON IG_PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN IG_MOST ON IG_PROFILE.Userid=IG_MOST.Userid;\n",
    "            ''', conn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### User Case 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Top 10 all-time scoring leaders of 2014-2015 regular season"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Team</th>\n",
       "      <th>PTS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>James Harden</td>\n",
       "      <td>HOU</td>\n",
       "      <td>27.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LeBron James</td>\n",
       "      <td>CLE</td>\n",
       "      <td>25.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Anthony Davis</td>\n",
       "      <td>NOP</td>\n",
       "      <td>24.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>DeMarcus Cousins</td>\n",
       "      <td>SAC</td>\n",
       "      <td>24.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Stephen Curry</td>\n",
       "      <td>GSW</td>\n",
       "      <td>23.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>LaMarcus Aldridge</td>\n",
       "      <td>POR</td>\n",
       "      <td>23.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Blake Griffin</td>\n",
       "      <td>LAC</td>\n",
       "      <td>21.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Klay Thompson</td>\n",
       "      <td>GSW</td>\n",
       "      <td>21.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Kyrie Irving</td>\n",
       "      <td>CLE</td>\n",
       "      <td>21.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Rudy Gay</td>\n",
       "      <td>SAC</td>\n",
       "      <td>21.1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Name Team   PTS\n",
       "0       James Harden  HOU  27.4\n",
       "1       LeBron James  CLE  25.3\n",
       "2      Anthony Davis  NOP  24.4\n",
       "3   DeMarcus Cousins  SAC  24.1\n",
       "4      Stephen Curry  GSW  23.8\n",
       "5  LaMarcus Aldridge  POR  23.4\n",
       "6      Blake Griffin  LAC  21.9\n",
       "7      Klay Thompson  GSW  21.7\n",
       "8       Kyrie Irving  CLE  21.7\n",
       "9           Rudy Gay  SAC  21.1"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_sql('''SELECT PROFILE.Name AS Name, Abbreviation AS Team, PTS\n",
    "            FROM STAT_2014_2015\n",
    "            INNER JOIN PROFILE ON PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN TEAMS ON TEAMS.Team_id=STAT_2014_2015.Team_id \n",
    "            ORDER BY PTS DESC\n",
    "            LIMIT 10;\n",
    "            ''', conn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### User Case 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Teams have 2 or more players that Rebounds Per Game (RPG) is higher than 7.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>COUNT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>OKC</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ATL</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CHI</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CLE</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>DET</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>GSW</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>LAC</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>LAL</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>MEM</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>NOP</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>SAS</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>UTA</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Team  COUNT\n",
       "0   OKC      3\n",
       "1   ATL      2\n",
       "2   CHI      2\n",
       "3   CLE      2\n",
       "4   DET      2\n",
       "5   GSW      2\n",
       "6   LAC      2\n",
       "7   LAL      2\n",
       "8   MEM      2\n",
       "9   NOP      2\n",
       "10  SAS      2\n",
       "11  UTA      2"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_sql('''SELECT Abbreviation AS Team, COUNT(RPG) AS COUNT\n",
    "            FROM STAT_2014_2015 \n",
    "            INNER JOIN TEAMS ON TEAMS.Team_id=STAT_2014_2015.Team_id \n",
    "            WHERE RPG>7.0 \n",
    "            GROUP BY Team\n",
    "            Having COUNT>=2\n",
    "            ORDER BY COUNT DESC;\n",
    "            ''', conn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### User Case 3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Top 15 players who have most followers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Username</th>\n",
       "      <th>Followers</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LeBron James</td>\n",
       "      <td>kingjames</td>\n",
       "      <td>47965402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Stephen Curry</td>\n",
       "      <td>stephencurry30</td>\n",
       "      <td>24553855</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Kyrie Irving</td>\n",
       "      <td>kyrieirving</td>\n",
       "      <td>12570804</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>James Harden</td>\n",
       "      <td>jharden13</td>\n",
       "      <td>9444368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chris Paul</td>\n",
       "      <td>cp3</td>\n",
       "      <td>8792796</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Klay Thompson</td>\n",
       "      <td>klaythompson</td>\n",
       "      <td>6085125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Damian Lillard</td>\n",
       "      <td>damianlillard</td>\n",
       "      <td>5276456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Giannis Antetokounmpo</td>\n",
       "      <td>giannis_an34</td>\n",
       "      <td>4392395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>JR Smith</td>\n",
       "      <td>teamswish</td>\n",
       "      <td>4264300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jimmy Butler</td>\n",
       "      <td>jimmybutler</td>\n",
       "      <td>3990676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Isaiah Thomas</td>\n",
       "      <td>isaiahthomas</td>\n",
       "      <td>3651391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Blake Griffin</td>\n",
       "      <td>blakegriffin23</td>\n",
       "      <td>3614321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Anthony Davis</td>\n",
       "      <td>antdavis23</td>\n",
       "      <td>3403277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Draymond Green</td>\n",
       "      <td>money23green</td>\n",
       "      <td>3145187</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>DeMarcus Cousins</td>\n",
       "      <td>boogiecousins</td>\n",
       "      <td>2945254</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Name        Username  Followers\n",
       "0            LeBron James       kingjames   47965402\n",
       "1           Stephen Curry  stephencurry30   24553855\n",
       "2            Kyrie Irving     kyrieirving   12570804\n",
       "3            James Harden       jharden13    9444368\n",
       "4              Chris Paul             cp3    8792796\n",
       "5           Klay Thompson    klaythompson    6085125\n",
       "6          Damian Lillard   damianlillard    5276456\n",
       "7   Giannis Antetokounmpo    giannis_an34    4392395\n",
       "8                JR Smith       teamswish    4264300\n",
       "9            Jimmy Butler     jimmybutler    3990676\n",
       "10          Isaiah Thomas    isaiahthomas    3651391\n",
       "11          Blake Griffin  blakegriffin23    3614321\n",
       "12          Anthony Davis      antdavis23    3403277\n",
       "13         Draymond Green    money23green    3145187\n",
       "14       DeMarcus Cousins   boogiecousins    2945254"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_sql('''SELECT Name, Username, Followers\n",
    "            FROM STAT_2014_2015\n",
    "            INNER JOIN PROFILE ON PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            INNER JOIN TEAMS ON TEAMS.Team_id=STAT_2014_2015.Team_id\n",
    "            INNER JOIN IG_PROFILE ON IG_PROFILE.Player_id=STAT_2014_2015.Player_id \n",
    "            ORDER BY Followers DESC\n",
    "            LIMIT 15;\n",
    "            ''', conn)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### User Case 4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "How many players in their team are using Instagram"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>COUNT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BOS</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>DAL</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ATL</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>GSW</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LAC</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>MEM</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>MIL</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>OKC</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>SAS</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>TOR</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>CLE</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>UTA</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>WAS</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>CHI</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>IND</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>LAL</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>NOP</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>ORL</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>POR</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>SAC</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>CHA</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>DEN</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>DET</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>MIA</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>PHX</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>BKN</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>HOU</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>NYK</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>MIN</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>PHI</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Team  COUNT\n",
       "0   BOS      9\n",
       "1   DAL      9\n",
       "2   ATL      8\n",
       "3   GSW      8\n",
       "4   LAC      8\n",
       "5   MEM      8\n",
       "6   MIL      8\n",
       "7   OKC      8\n",
       "8   SAS      8\n",
       "9   TOR      8\n",
       "10  CLE      7\n",
       "11  UTA      7\n",
       "12  WAS      7\n",
       "13  CHI      6\n",
       "14  IND      6\n",
       "15  LAL      6\n",
       "16  NOP      6\n",
       "17  ORL      6\n",
       "18  POR      6\n",
       "19  SAC      6\n",
       "20  CHA      5\n",
       "21  DEN      5\n",
       "22  DET      5\n",
       "23  MIA      5\n",
       "24  PHX      5\n",
       "25  BKN      4\n",
       "26  HOU      4\n",
       "27  NYK      4\n",
       "28  MIN      3\n",
       "29  PHI      3"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_sql('''SELECT Abbreviation AS Team, COUNT(Userid) AS COUNT\n",
    "            FROM STAT_2014_2015\n",
    "            INNER JOIN TEAMS ON TEAMS.Team_id=STAT_2014_2015.Team_id\n",
    "            INNER JOIN IG_PROFILE ON IG_PROFILE.Player_id=STAT_2014_2015.Player_id \n",
    "            GROUP BY Team\n",
    "            ORDER BY COUNT DESC;\n",
    "            ''', conn)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### User Case 5"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Players that Body Mass Index (BMI) are in normal weight 18.5 to 24.9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>BMI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Corey Brewer</td>\n",
       "      <td>202.5</td>\n",
       "      <td>83.70</td>\n",
       "      <td>20.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Will Barton</td>\n",
       "      <td>195.0</td>\n",
       "      <td>78.75</td>\n",
       "      <td>20.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Justin Holiday</td>\n",
       "      <td>195.0</td>\n",
       "      <td>83.25</td>\n",
       "      <td>21.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Steve Blake</td>\n",
       "      <td>187.5</td>\n",
       "      <td>77.40</td>\n",
       "      <td>22.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Shaun Livingston</td>\n",
       "      <td>197.5</td>\n",
       "      <td>86.40</td>\n",
       "      <td>22.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Otto Porter Jr.</td>\n",
       "      <td>200.0</td>\n",
       "      <td>89.10</td>\n",
       "      <td>22.27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Aaron Brooks</td>\n",
       "      <td>180.0</td>\n",
       "      <td>72.45</td>\n",
       "      <td>22.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Dante Exum</td>\n",
       "      <td>195.0</td>\n",
       "      <td>85.50</td>\n",
       "      <td>22.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Michael Carter-Williams</td>\n",
       "      <td>195.0</td>\n",
       "      <td>85.50</td>\n",
       "      <td>22.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Nicolas Batum</td>\n",
       "      <td>200.0</td>\n",
       "      <td>90.00</td>\n",
       "      <td>22.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Donatas Motiejunas</td>\n",
       "      <td>210.0</td>\n",
       "      <td>99.90</td>\n",
       "      <td>22.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Zach LaVine</td>\n",
       "      <td>192.5</td>\n",
       "      <td>85.05</td>\n",
       "      <td>22.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Norris Cole</td>\n",
       "      <td>185.0</td>\n",
       "      <td>78.75</td>\n",
       "      <td>23.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Elfrid Payton</td>\n",
       "      <td>190.0</td>\n",
       "      <td>83.25</td>\n",
       "      <td>23.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Tony Snell</td>\n",
       "      <td>197.5</td>\n",
       "      <td>90.00</td>\n",
       "      <td>23.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Giannis Antetokounmpo</td>\n",
       "      <td>207.5</td>\n",
       "      <td>99.90</td>\n",
       "      <td>23.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Dennis Schroder</td>\n",
       "      <td>182.5</td>\n",
       "      <td>77.40</td>\n",
       "      <td>23.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Kemba Walker</td>\n",
       "      <td>182.5</td>\n",
       "      <td>77.40</td>\n",
       "      <td>23.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Tayshaun Prince</td>\n",
       "      <td>202.5</td>\n",
       "      <td>95.40</td>\n",
       "      <td>23.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Brian Roberts</td>\n",
       "      <td>182.5</td>\n",
       "      <td>77.85</td>\n",
       "      <td>23.37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Jordan Clarkson</td>\n",
       "      <td>192.5</td>\n",
       "      <td>87.30</td>\n",
       "      <td>23.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Nikola Mirotic</td>\n",
       "      <td>205.0</td>\n",
       "      <td>99.00</td>\n",
       "      <td>23.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Robert Covington</td>\n",
       "      <td>202.5</td>\n",
       "      <td>96.75</td>\n",
       "      <td>23.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Harrison Barnes</td>\n",
       "      <td>200.0</td>\n",
       "      <td>94.50</td>\n",
       "      <td>23.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Jerami Grant</td>\n",
       "      <td>200.0</td>\n",
       "      <td>94.50</td>\n",
       "      <td>23.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Lou Williams</td>\n",
       "      <td>182.5</td>\n",
       "      <td>78.75</td>\n",
       "      <td>23.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Mike Conley</td>\n",
       "      <td>182.5</td>\n",
       "      <td>78.75</td>\n",
       "      <td>23.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Evan Fournier</td>\n",
       "      <td>197.5</td>\n",
       "      <td>92.25</td>\n",
       "      <td>23.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Gerald Green</td>\n",
       "      <td>197.5</td>\n",
       "      <td>92.25</td>\n",
       "      <td>23.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Avery Bradley</td>\n",
       "      <td>185.0</td>\n",
       "      <td>81.00</td>\n",
       "      <td>23.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Jamal Crawford</td>\n",
       "      <td>192.5</td>\n",
       "      <td>90.00</td>\n",
       "      <td>24.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>Kelly Olynyk</td>\n",
       "      <td>210.0</td>\n",
       "      <td>107.10</td>\n",
       "      <td>24.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>Bojan Bogdanovic</td>\n",
       "      <td>200.0</td>\n",
       "      <td>97.20</td>\n",
       "      <td>24.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>Chris Paul</td>\n",
       "      <td>180.0</td>\n",
       "      <td>78.75</td>\n",
       "      <td>24.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Goran Dragic</td>\n",
       "      <td>187.5</td>\n",
       "      <td>85.50</td>\n",
       "      <td>24.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>Ramon Sessions</td>\n",
       "      <td>187.5</td>\n",
       "      <td>85.50</td>\n",
       "      <td>24.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>Ray McCallum</td>\n",
       "      <td>187.5</td>\n",
       "      <td>85.50</td>\n",
       "      <td>24.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>Stephen Curry</td>\n",
       "      <td>187.5</td>\n",
       "      <td>85.50</td>\n",
       "      <td>24.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>Tony Parker</td>\n",
       "      <td>185.0</td>\n",
       "      <td>83.25</td>\n",
       "      <td>24.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>Damjan Rudez</td>\n",
       "      <td>205.0</td>\n",
       "      <td>102.60</td>\n",
       "      <td>24.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>Jon Leuer</td>\n",
       "      <td>205.0</td>\n",
       "      <td>102.60</td>\n",
       "      <td>24.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>Kent Bazemore</td>\n",
       "      <td>192.5</td>\n",
       "      <td>90.45</td>\n",
       "      <td>24.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>Rudy Gobert</td>\n",
       "      <td>212.5</td>\n",
       "      <td>110.25</td>\n",
       "      <td>24.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>Spencer Hawes</td>\n",
       "      <td>212.5</td>\n",
       "      <td>110.25</td>\n",
       "      <td>24.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>Jeff Teague</td>\n",
       "      <td>185.0</td>\n",
       "      <td>83.70</td>\n",
       "      <td>24.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>Kyle Korver</td>\n",
       "      <td>197.5</td>\n",
       "      <td>95.40</td>\n",
       "      <td>24.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>Devin Harris</td>\n",
       "      <td>187.5</td>\n",
       "      <td>86.40</td>\n",
       "      <td>24.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>Chandler Parsons</td>\n",
       "      <td>205.0</td>\n",
       "      <td>103.50</td>\n",
       "      <td>24.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>Matthew Dellavedova</td>\n",
       "      <td>190.0</td>\n",
       "      <td>89.10</td>\n",
       "      <td>24.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>Luke Babbitt</td>\n",
       "      <td>202.5</td>\n",
       "      <td>101.25</td>\n",
       "      <td>24.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>Omri Casspi</td>\n",
       "      <td>202.5</td>\n",
       "      <td>101.25</td>\n",
       "      <td>24.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>Taj Gibson</td>\n",
       "      <td>202.5</td>\n",
       "      <td>101.25</td>\n",
       "      <td>24.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>Cory Joseph</td>\n",
       "      <td>187.5</td>\n",
       "      <td>86.85</td>\n",
       "      <td>24.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>Kyrie Irving</td>\n",
       "      <td>187.5</td>\n",
       "      <td>86.85</td>\n",
       "      <td>24.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>Jonas Jerebko</td>\n",
       "      <td>205.0</td>\n",
       "      <td>103.95</td>\n",
       "      <td>24.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>Klay Thompson</td>\n",
       "      <td>197.5</td>\n",
       "      <td>96.75</td>\n",
       "      <td>24.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>Rasual Butler</td>\n",
       "      <td>197.5</td>\n",
       "      <td>96.75</td>\n",
       "      <td>24.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>Wesley Johnson</td>\n",
       "      <td>197.5</td>\n",
       "      <td>96.75</td>\n",
       "      <td>24.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>Leandro Barbosa</td>\n",
       "      <td>187.5</td>\n",
       "      <td>87.30</td>\n",
       "      <td>24.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>Kentavious Caldwell-Pope</td>\n",
       "      <td>192.5</td>\n",
       "      <td>92.25</td>\n",
       "      <td>24.89</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>85 rows √ó 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Name  Height  Weight    BMI\n",
       "0               Corey Brewer   202.5   83.70  20.41\n",
       "1                Will Barton   195.0   78.75  20.71\n",
       "2             Justin Holiday   195.0   83.25  21.89\n",
       "3                Steve Blake   187.5   77.40  22.02\n",
       "4           Shaun Livingston   197.5   86.40  22.15\n",
       "5            Otto Porter Jr.   200.0   89.10  22.27\n",
       "6               Aaron Brooks   180.0   72.45  22.36\n",
       "7                 Dante Exum   195.0   85.50  22.49\n",
       "8    Michael Carter-Williams   195.0   85.50  22.49\n",
       "9              Nicolas Batum   200.0   90.00  22.50\n",
       "10        Donatas Motiejunas   210.0   99.90  22.65\n",
       "11               Zach LaVine   192.5   85.05  22.95\n",
       "12               Norris Cole   185.0   78.75  23.01\n",
       "13             Elfrid Payton   190.0   83.25  23.06\n",
       "14                Tony Snell   197.5   90.00  23.07\n",
       "15     Giannis Antetokounmpo   207.5   99.90  23.20\n",
       "16           Dennis Schroder   182.5   77.40  23.24\n",
       "17              Kemba Walker   182.5   77.40  23.24\n",
       "18           Tayshaun Prince   202.5   95.40  23.26\n",
       "19             Brian Roberts   182.5   77.85  23.37\n",
       "20           Jordan Clarkson   192.5   87.30  23.56\n",
       "21            Nikola Mirotic   205.0   99.00  23.56\n",
       "22          Robert Covington   202.5   96.75  23.59\n",
       "23           Harrison Barnes   200.0   94.50  23.63\n",
       "24              Jerami Grant   200.0   94.50  23.63\n",
       "25              Lou Williams   182.5   78.75  23.64\n",
       "26               Mike Conley   182.5   78.75  23.64\n",
       "27             Evan Fournier   197.5   92.25  23.65\n",
       "28              Gerald Green   197.5   92.25  23.65\n",
       "29             Avery Bradley   185.0   81.00  23.67\n",
       "..                       ...     ...     ...    ...\n",
       "55            Jamal Crawford   192.5   90.00  24.29\n",
       "56              Kelly Olynyk   210.0  107.10  24.29\n",
       "57          Bojan Bogdanovic   200.0   97.20  24.30\n",
       "58                Chris Paul   180.0   78.75  24.31\n",
       "59              Goran Dragic   187.5   85.50  24.32\n",
       "60            Ramon Sessions   187.5   85.50  24.32\n",
       "61              Ray McCallum   187.5   85.50  24.32\n",
       "62             Stephen Curry   187.5   85.50  24.32\n",
       "63               Tony Parker   185.0   83.25  24.32\n",
       "64              Damjan Rudez   205.0  102.60  24.41\n",
       "65                 Jon Leuer   205.0  102.60  24.41\n",
       "66             Kent Bazemore   192.5   90.45  24.41\n",
       "67               Rudy Gobert   212.5  110.25  24.42\n",
       "68             Spencer Hawes   212.5  110.25  24.42\n",
       "69               Jeff Teague   185.0   83.70  24.46\n",
       "70               Kyle Korver   197.5   95.40  24.46\n",
       "71              Devin Harris   187.5   86.40  24.58\n",
       "72          Chandler Parsons   205.0  103.50  24.63\n",
       "73       Matthew Dellavedova   190.0   89.10  24.68\n",
       "74              Luke Babbitt   202.5  101.25  24.69\n",
       "75               Omri Casspi   202.5  101.25  24.69\n",
       "76                Taj Gibson   202.5  101.25  24.69\n",
       "77               Cory Joseph   187.5   86.85  24.70\n",
       "78              Kyrie Irving   187.5   86.85  24.70\n",
       "79             Jonas Jerebko   205.0  103.95  24.74\n",
       "80             Klay Thompson   197.5   96.75  24.80\n",
       "81             Rasual Butler   197.5   96.75  24.80\n",
       "82            Wesley Johnson   197.5   96.75  24.80\n",
       "83           Leandro Barbosa   187.5   87.30  24.83\n",
       "84  Kentavious Caldwell-Pope   192.5   92.25  24.89\n",
       "\n",
       "[85 rows x 4 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_sql('''SELECT Name,Height,Weight, round(Weight/Height/Height*100*100,2) AS BMI\n",
    "            FROM STAT_2014_2015\n",
    "            INNER JOIN PROFILE ON PROFILE.Player_id=STAT_2014_2015.Player_id\n",
    "            WHERE BMI>=18.5 and BMI<=24.9\n",
    "            ORDER BY BMI ASC;\n",
    "            ''', conn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Citations\n",
    "1. https://github.com/nikbearbrown/INFO_6210/blob/master/Week_2/NBB_IMDB_Web_Scraper.ipynb\n",
    "2. https://github.com/danielfrg/espn-nba-scrapy/blob/master/src/scrap/get_players.py\n",
    "3. http://www.gregreda.com/2015/02/15/web-scraping-finding-the-api/\n",
    "4. http://savvastjortjoglou.com/nba-shot-sharts.html\n",
    "5. https://instaloader.github.io/index.html\n",
    "6. https://sebastianraschka.com/Articles/2014_sqlite_in_python_tutorial.html\n",
    "7. http://www.dcs.bbk.ac.uk/~ptw/teaching/DBM/er.pdf\n",
    "8. https://www.dataquest.io/blog/python-pandas-databases/\n",
    "9. https://github.com/nikbearbrown/INFO_6210/tree/master/Lahmans_Baseball_Database\n",
    "\n",
    "Data source links:  \n",
    "1. ESPN: http://www.espn.com/nba/statistics/player/_/stat/rebounds/sort/avgRebounds/year/2015/count/\n",
    "2. NBA: https://stats.nba.com/leaders/?Season=2014-15&SeasonType=Regular%20Season\n",
    "3. Kaggle: https://www.kaggle.com/drgilermo/nba-players-stats-20142015/version/1\n",
    "4. Instagram: https://www.instagram.com/"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Contribution\n",
    "This assignment is 95% done by my own, and 5% of the information and code that help me to do this assignment are from the Internet as the citations shown."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### License\n",
    "Copyright 2019 Chiung-Chih Lin\n",
    "\n",
    "Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n",
    "\n",
    "The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n",
    "\n",
    "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
